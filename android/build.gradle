buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:7.2.1"
    }
}

def isNewArchitectureEnabled() {
    return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

apply plugin: 'com.android.library'

def appProject = rootProject.allprojects.find { it.plugins.hasPlugin('com.android.application') }

if (isNewArchitectureEnabled()) {
    apply plugin: "com.facebook.react"
}

def getExtOrDefault(name) {
    return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties["react-native-video_" + name]
}

def getExtOrIntegerDefault(name) {
    return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["react-native-video_" + name]).toInteger()
}


def useExoplayerIMA = getExtOrDefault("RNVUseExoplayerIMA")

println "useExoplayerIMA:" + useExoplayerIMA

// This string is used to define build path.
// As react native build output directory is react-native path of the module.
// We need to force a new path on each configuration change.
// If you add a new build parameter, please add the new value in this string
def configStringPath = (
        'useExoplayerIMA' + useExoplayerIMA \
).md5()

android {
    compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")

    defaultConfig {
        minSdkVersion getExtOrIntegerDefault("minSdkVersion")
        targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")
        buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }

    lintOptions {
        disable "GradleCompatible"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildDir 'buildOutput_' + configStringPath

    sourceSets {
        main {
            java {
                if (useExoplayerIMA) {
                    exclude 'com/google/ads/interactivemedia/v3/api'
                    exclude 'com/google/android/exoplayer2/ext/ima'
                }
            }
        }
    }
}

repositories {
    mavenCentral()
    google()
}

dependencies {
    // For < 0.71, this will be from the local maven repo
    // For > 0.71, this will be replaced by `com.facebook.react:react-android:$version` by react gradle plugin
    //noinspection GradleDynamicVersion
    implementation "com.facebook.react:react-android:+"
    def REACT_NATIVE_VERSION = new File(['node', '--print',"JSON.parse(require('fs').readFileSync(require.resolve('react-native/package.json'), 'utf-8')).version"].execute(null, rootDir).text.trim())
    configurations.all {
        resolutionStrategy {
            force "com.facebook.react:react-android:" + REACT_NATIVE_VERSION
        }
    }
    implementation('com.google.android.exoplayer:exoplayer:2.18.7') {
        exclude group: 'com.android.support'
    }
    implementation('com.google.android.exoplayer:extension-okhttp:2.18.7')

    // All support libs must use the same version
    implementation "androidx.annotation:annotation:1.1.0"
    implementation "androidx.core:core:1.1.0"
    implementation "androidx.media:media:1.1.0"
    implementation "androidx.activity:activity:1.4.0"



    if (useExoplayerIMA) {
        implementation 'com.google.android.exoplayer:extension-ima:2.18.1'
    }
}
if (isNewArchitectureEnabled()) {
    react {
        jsRootDir = file("../src/")
        libraryName = "react-native-video"
        codegenJavaPackageName = "com.awesomemodule"
    }
}